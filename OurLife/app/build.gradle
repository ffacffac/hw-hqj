apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.compileSdkVersion
//    compileSdkVersion var.compileSdkVersion
    defaultConfig {
        applicationId "com.hw.ourlife"
//        minSdkVersion var.minSdkVersion
//        targetSdkVersion var.targetSdkVersion
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$rootProject.appcompat_v7"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraint_layout"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation "junit:junit:$rootProject.junit"
    androidTestImplementation "com.android.support.test:runner:$rootProject.test_runner"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espresso_core"

    //    api "io.reactivex.rxjava2:rxjava:$rootProject.v_rxjava"

    //    api "io.reactivex.rxjava2:rxandroid:$rootProject.v_rxjava_android"
    api "com.google.dagger:dagger:$rootProject.v_dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.v_dagger_compiler"

    //butterknife
    api "com.jakewharton:butterknife:$v_butterknife"
    annotationProcessor "com.jakewharton:butterknife-compiler:$v_butterknife_compiler"

    //leakcanary start
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.leakcanary_android"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakcanary_android_no_op"

    // Optional, if you use support library fragments:
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$rootProject.leakcanary_support_fragment"
    //leakcanary end

    implementation "com.android.support:cardview-v7:$rootProject.appcompat_v7"
    implementation "com.android.support:recyclerview-v7:$rootProject.appcompat_v7"
    api project(':baselibrary')
//    implementation project(':Annotation')
    //注解处理器
//    annotationProcessor project(':Congfial')
//    implementation project(':Library')
}
